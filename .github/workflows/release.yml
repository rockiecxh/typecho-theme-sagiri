name: RELEASE_TAG

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2

      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'

      - name: Build
        run: |
          npm i pnpm -g
          pnpm install --no-frozen-lockfile
          pnpm run build

      - name: cp php file
        run: |
          rm -rf ./build
          mkdir -p ./build
          cp ./README.md ./build
          cp ./package.json ./build
          cp ./screenshot.png ./build
          cp ./*.php ./build
          cp -r ./component ./build
          cp -r ./libray ./build
          cp -r ./assets ./build
          mkdir ./build/js
          mkdir ./build/util
          cp -r ./js/lib ./build/js/lib
          cp -r ./js/*.min.js  ./build/js
          cp -r ./util/*.min.js ./build/util
          cp -r ./util/**/*.min.js ./build/util
          mkdir ./build/css
          cp -r ./css/*.min.css  ./build/css

      - uses: google-github-actions/release-please-action@v3
        with:
          token: ${{ secrets.GIT_HUB_TOKEN }}
          release-type: node
          extra-files: |
            build/*

        if: ${{ steps.release.outputs.release_created }}
      - run: npm ci
        if: ${{ steps.release.outputs.release_created }}
      - name: Publish
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        if: ${{ steps.release.outputs.release_created }}
      - uses: actions/setup-node@v3
        with:
          registry-url: 'https://npm.pkg.github.com'
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GIT_HUB_TOKEN }}
